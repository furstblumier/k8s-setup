csiDriver:
  # should be globally unique for a given cluster
  name: "org.democratic-csi.nfs"
  fsGroupPolicy: File

# add note here about volume expansion requirements
storageClasses:
  - name: freenas-nfs-csi
    defaultClass: false
    reclaimPolicy: Delete
    volumeBindingMode: Immediate
    allowVolumeExpansion: true
    parameters:
      # for block-based storage can be ext3, ext4, xfs
      # for nfs should be nfs
      fsType: nfs
      csi.storage.k8s.io/controller-expand-secret-namespace: democratic-csi
      csi.storage.k8s.io/controller-publish-secret-namespace: democratic-csi
      csi.storage.k8s.io/node-publish-secret-namespace: democratic-csi
      csi.storage.k8s.io/node-stage-secret-namespace: democratic-csi
      csi.storage.k8s.io/provisioner-secret-namespace: democratic-csi

      # if true, volumes created from other snapshots will be
      # zfs send/received instead of zfs cloned
      # detachedVolumesFromSnapshots: "false"

      # if true, volumes created from other volumes will be
      # zfs send/received instead of zfs cloned
      # detachedVolumesFromVolumes: "false"

    mountOptions:
      - noatime
      - nfsvers=3
    secrets:
      provisioner-secret:
      controller-publish-secret:
      node-stage-secret:
      node-publish-secret:
      controller-expand-secret:

# if your cluster supports snapshots you may enable below
volumeSnapshotClasses: []
#- name: freenas-nfs-csi
#  parameters:
#  # if true, snapshots will be created with zfs send/receive
#  # detachedSnapshots: "false"
#  secrets:
#    snapshotter-secret:

driver:
  # workaround for new truenas
  image:
    tag: next
  config:
    # please see the most up-to-date example of the corresponding config here:
    # https://github.com/democratic-csi/democratic-csi/tree/master/examples
    # YOU MUST COPY THE DATA HERE INLINE!
    driver: freenas-api-nfs
  existingConfigSecret: democratic-csi-nfs-secret

controller:
  driver:
    image:
      tag: next

